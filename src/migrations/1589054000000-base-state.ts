import { MigrationInterface, QueryRunner } from 'typeorm'

export class BaseState1589054000000 implements MigrationInterface {
    name = 'BaseState1589054000000'

    async up (runner: QueryRunner): Promise<any> {
        await runner.query(`CREATE TABLE "users" ("id" SERIAL NOT NULL, "nickname" character varying NOT NULL, "avatar" text DEFAULT null, "admin" boolean NOT NULL DEFAULT false, "moderator" boolean NOT NULL DEFAULT false, "trusted" boolean NOT NULL DEFAULT false, "banned" boolean NOT NULL DEFAULT false, "donated" integer NOT NULL DEFAULT 0, "first_login_at" TIMESTAMP NOT NULL DEFAULT now(), "external_ids" jsonb NOT NULL, "service" character varying NOT NULL, "sub" text array NOT NULL DEFAULT '{}'::text[], CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`, [])
        await runner.query(`CREATE UNIQUE INDEX "IDX_ad02a1be8707004cb805a4b502" ON "users" ("nickname") `, [])
        await runner.query(`CREATE TYPE "auth_data_service_enum" AS ENUM('S')`, [])
        await runner.query(`CREATE TABLE "auth_data" ("id" SERIAL NOT NULL, "user_id" integer NOT NULL, "service" "auth_data_service_enum" NOT NULL, "options" json NOT NULL, CONSTRAINT "PK_d90ebaf639410c91129bab5eea1" PRIMARY KEY ("id"))`, [])
        await runner.query(`CREATE INDEX "IDX_224fa1b0ded43b0dafff4f3678" ON "auth_data" ("user_id") `, [])
        await runner.query(`CREATE TYPE "comments_target_type_enum" AS ENUM('anime', 'manga')`, [])
        await runner.query(`CREATE TABLE "firebase_token" ("token" character varying NOT NULL, "user_id" integer NOT NULL, CONSTRAINT "PK_6e304d4ce4b4834e817e9200272" PRIMARY KEY ("token"))`, [])
        await runner.query(`CREATE INDEX "IDX_678b4c4659254df724a49ecb2b" ON "firebase_token" ("user_id") `, [])
        await runner.query(`CREATE TABLE "key_value" ("key" character varying NOT NULL, "value" character varying NOT NULL, CONSTRAINT "PK_f0f311dbd493bba26c68c4d3540" PRIMARY KEY ("key"))`, [])
        await runner.query(`CREATE TYPE "mappings_type_enum" AS ENUM('anime', 'manga')`, [])
        await runner.query(`CREATE TABLE "mappings" ("id" SERIAL NOT NULL, "type" "mappings_type_enum" NOT NULL, "external" jsonb NOT NULL, CONSTRAINT "PK_f77700976d4a5ff7d7ed8445c03" PRIMARY KEY ("id"))`, [])
        await runner.query(`CREATE TABLE "notification" ("id" SERIAL NOT NULL, "time" TIMESTAMP NOT NULL DEFAULT now(), "progress" double precision NOT NULL DEFAULT 1, "for_users" integer array DEFAULT null, "deleted" boolean NOT NULL DEFAULT false, "topics" text array NOT NULL DEFAULT '{}'::text[], "payload" json DEFAULT null, CONSTRAINT "PK_705b6c7cdf9b2c2ff7ac7872cb7" PRIMARY KEY ("id"))`, [])
        await runner.query(`CREATE TABLE "oauth_app" ("id" SERIAL NOT NULL, "client_id" character varying NOT NULL, "client_secret" character varying NOT NULL, "owner_id" integer, "name" character varying NOT NULL, "icon" text DEFAULT null, "description" character varying NOT NULL DEFAULT '', "redirect_uri" character varying NOT NULL DEFAULT 'https://plashiki.su/static/oauth.blank.html', "server_scope" text array NOT NULL DEFAULT '{}'::text[], CONSTRAINT "PK_3256b97c0a3ee2d67240805dca4" PRIMARY KEY ("id"))`, [])
        await runner.query(`CREATE TABLE "oauth_session" ("token" character varying NOT NULL, "app_id" integer, "user_id" integer, "captcha" integer NOT NULL DEFAULT 0, CONSTRAINT "PK_fbc64798829da056fbdd60f53d5" PRIMARY KEY ("token"))`, [])
        await runner.query(`CREATE TABLE "parsers" ("uid" character varying NOT NULL, "provide" text array NOT NULL DEFAULT '{}'::text[], "disabled" boolean NOT NULL DEFAULT false, "public" character varying NOT NULL DEFAULT '', "cri" boolean NOT NULL DEFAULT false, "code" character varying NOT NULL, "source" bytea NOT NULL, "hash" character varying NOT NULL, CONSTRAINT "PK_ab562d37bd2153e6291e6f26b73" PRIMARY KEY ("uid"))`, [])
        await runner.query(`CREATE TYPE "reports_type_enum" AS ENUM('invalid_media', 'invalid_part', 'invalid_meta', 'broken_link', 'legal_issue', 'other')`, [])
        await runner.query(`CREATE TYPE "reports_status_enum" AS ENUM('pending', 'resolved', 'discarded')`, [])
        await runner.query(`CREATE TABLE "reports" ("id" SERIAL NOT NULL, "translation_id" integer NOT NULL, "type" "reports_type_enum" NOT NULL, "comment" character varying NOT NULL, "sender_id" integer NOT NULL, "status" "reports_status_enum" NOT NULL, "edit" json DEFAULT 'null', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_d9013193989303580053c0b5ef6" PRIMARY KEY ("id"))`, [])
        await runner.query(`CREATE TABLE "stats" ("day" date NOT NULL, "data" json NOT NULL, CONSTRAINT "PK_7f55369808f732ac4741f7cdfdf" PRIMARY KEY ("day"))`, [])
        await runner.query(`CREATE TYPE "translations_target_type_enum" AS ENUM('anime', 'manga')`, [])
        await runner.query(`CREATE TYPE "translations_kind_enum" AS ENUM('sub', 'dub', 'scan', 'off', 'raw')`, [])
        await runner.query(`CREATE TYPE "translations_lang_enum" AS ENUM('en', 'ru', 'by', 'ua', 'jp', 'fr', 'de', 'cn', 'ko', 'other')`, [])
        await runner.query(`CREATE TYPE "translations_status_enum" AS ENUM('pending', 'added', 'declined', 'mapping')`, [])
        await runner.query(`CREATE TABLE "translations" ("id" SERIAL NOT NULL, "target_id" integer NOT NULL, "target_type" "translations_target_type_enum" NOT NULL, "part" integer NOT NULL, "kind" "translations_kind_enum" NOT NULL, "lang" "translations_lang_enum" NOT NULL, "hq" boolean NOT NULL, "author" character varying NOT NULL, "uploader_id" integer, "status" "translations_status_enum" NOT NULL, "url" character varying NOT NULL, "groups" text array NOT NULL DEFAULT '{}'::text[], "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_95126a4d9333075d68cdcb581e0" UNIQUE ("url"), CONSTRAINT "PK_aca248c72ae1fb2390f1bf4cd87" PRIMARY KEY ("id"))`, [])
        await runner.query(`CREATE INDEX "IDX_50d02f08e4f14378eebd244d5d" ON "translations" ("uploader_id") `, [])
        await runner.query(`CREATE INDEX "IDX_c9427656129a8b349da7155bad" ON "translations" ("status") `, [])
        await runner.query(`CREATE INDEX "IDX_8da293cbc8d40989c9d0a59000" ON "translations" ("updated_at") `, [])
        await runner.query(`CREATE INDEX "IDX_434651cc0d9dd18761d39ecab2" ON "translations" ("target_type", "target_id", "part") `, [])
        await runner.query(`ALTER TABLE "auth_data" ADD CONSTRAINT "FK_224fa1b0ded43b0dafff4f3678e" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`, [])
        await runner.query(`ALTER TABLE "firebase_token" ADD CONSTRAINT "FK_678b4c4659254df724a49ecb2bf" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`, [])
        await runner.query(`ALTER TABLE "oauth_app" ADD CONSTRAINT "FK_86cdf2fa1f5678128c260e7fcb5" FOREIGN KEY ("owner_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`, [])
        await runner.query(`ALTER TABLE "oauth_session" ADD CONSTRAINT "FK_ce75bf752f82710a2589bb47812" FOREIGN KEY ("app_id") REFERENCES "oauth_app"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`, [])
        await runner.query(`ALTER TABLE "oauth_session" ADD CONSTRAINT "FK_719c0a3619cc3dede800b30338c" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`, [])
        await runner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_3093222b218d494aaf0b30a9865" FOREIGN KEY ("sender_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`, [])
        await runner.query(`ALTER TABLE "translations" ADD CONSTRAINT "FK_50d02f08e4f14378eebd244d5d7" FOREIGN KEY ("uploader_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`, [])
    }

    async down (runner: QueryRunner): Promise<any> {
        await runner.query(`ALTER TABLE "auth_data" DROP CONSTRAINT "FK_224fa1b0ded43b0dafff4f3678e"`, [])
        await runner.query(`ALTER TABLE "firebase_token" DROP CONSTRAINT "FK_678b4c4659254df724a49ecb2bf"`, [])
        await runner.query(`ALTER TABLE "oauth_app" DROP CONSTRAINT "FK_86cdf2fa1f5678128c260e7fcb5"`, [])
        await runner.query(`ALTER TABLE "oauth_session" DROP CONSTRAINT "FK_ce75bf752f82710a2589bb47812"`, [])
        await runner.query(`ALTER TABLE "oauth_session" DROP CONSTRAINT "FK_719c0a3619cc3dede800b30338c"`, [])
        await runner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_3093222b218d494aaf0b30a9865"`, [])
        await runner.query(`ALTER TABLE "translations" DROP CONSTRAINT "FK_50d02f08e4f14378eebd244d5d7"`, [])
        await runner.query(`DROP TABLE "users"`, [])
        await runner.query(`DROP INDEX "IDX_ad02a1be8707004cb805a4b502"`, [])
        await runner.query(`DROP TYPE "auth_data_service_enum"`, [])
        await runner.query(`DROP TABLE "auth_data"`, [])
        await runner.query(`DROP INDEX "IDX_224fa1b0ded43b0dafff4f3678"`, [])
        await runner.query(`DROP TYPE "comments_target_type_enum"`, [])
        await runner.query(`DROP TABLE "firebase_token"`, [])
        await runner.query(`DROP INDEX "IDX_678b4c4659254df724a49ecb2b"`, [])
        await runner.query(`DROP TABLE "key_value"`, [])
        await runner.query(`DROP TYPE "mappings_type_enum"`, [])
        await runner.query(`DROP TABLE "mappings"`, [])
        await runner.query(`DROP TABLE "notification"`, [])
        await runner.query(`DROP TABLE "oauth_app"`, [])
        await runner.query(`DROP TABLE "oauth_session"`, [])
        await runner.query(`DROP TABLE "parsers"`, [])
        await runner.query(`DROP TYPE "reports_type_enum"`, [])
        await runner.query(`DROP TYPE "reports_status_enum"`, [])
        await runner.query(`DROP TABLE "reports"`, [])
        await runner.query(`DROP TABLE "stats"`, [])
        await runner.query(`DROP TYPE "translations_target_type_enum"`, [])
        await runner.query(`DROP TYPE "translations_kind_enum"`, [])
        await runner.query(`DROP TYPE "translations_lang_enum"`, [])
        await runner.query(`DROP TYPE "translations_status_enum"`, [])
        await runner.query(`DROP TABLE "translations"`, [])
        await runner.query(`DROP INDEX "IDX_50d02f08e4f14378eebd244d5d"`, [])
        await runner.query(`DROP INDEX "IDX_c9427656129a8b349da7155bad"`, [])
        await runner.query(`DROP INDEX "IDX_8da293cbc8d40989c9d0a59000"`, [])
        await runner.query(`DROP INDEX "IDX_434651cc0d9dd18761d39ecab2"`, [])
    }
}
